-title = ""
-title << @communication.newsletter.name+"&nbsp;: ".html_safe if @communication.newsletter
-title << @communication.name
-title <<" [Distribué]" if @communication.distributed?
-page_title(title.html_safe)
=toolbar do
  =tool("Retour", user_url(@communication.client))
  =tool("Modifier", edit_communication_url(@communication))
  -unless @communication.distributed?
    =tool("Importer les cibles", populate_communication_url(@communication))
    -if @communication.touchables.count > 0
      =tool("Supprimer les cibles", clear_communication_url(@communication), :method => :delete, "data-confirm" => "Sûr ?")
  -if @communication.flyer?
    =tool("HTML", message_url(@communication.key), :target => "_blank")
  =tool("PDF", communication_url(@communication, :format => :pdf))
-if @communication.testables.count > 0
  .btn-group
    =link_to("Test", distribute_communication_url(@communication), :method => :post, :class => "btn btn-success")
    %button.btn.btn-success.dropdown-toggle{"data-toggle" => :dropdown}
      %span.caret
    %ul.dropdown-menu
      -for canal in Touchable.canals
        %li=link_to("Test #{canal.humanize} seulement", distribute_communication_url(@communication, :only => canal), :method => :post)
-if @communication.distributable?
  .btn-group
    =link_to("Envoi", distribute_communication_url(@communication, :mode => :real), :method => :post, :class => "btn btn-danger", "data-confirm" => "Sûr(e) ?")
    %button.btn.btn-danger.dropdown-toggle{"data-toggle" => :dropdown}
      %span.caret
    %ul.dropdown-menu
      -for canal in Touchable.canals
        %li=link_to("Envoi #{canal.humanize} seulement", distribute_communication_url(@communication, :only => canal, :mode => :real), :method => :post, "data-confirm" => "Sûr(e) ?")


=tabbox(:communication) do |t|
  -t.tab(:edit, @communication.nature.humanize) do
    -if @communication.newsletter?
      .pull-right
        =toolbar do
          =tool("Ajouter un article", new_article_url(:communication_id => @communication.id), :icon => "plus")
          =tool("Ajouter une pièce", new_piece_url(:communication_id => @communication.id), :icon => "file")
          -if current_user.administrator
            =tool("Newsletter", edit_newsletter_url(@communication.newsletter), :icon => "wrench")
      -if @communication.alone_pieces.count > 0
        .pieces=render :partial => "pieces/piece", :collection => @communication.alone_pieces
      .newsletter
        -if @communication.header.file?
          =image_tag(@communication.header.url(:web), :class => "nl-header")
        %h1=@communication.interpolate(@communication.title)
        .introduction=beautify(@communication.introduction)
        .articles=render :partial => "articles/article", :collection => @communication.articles
        .conclusion=beautify(@communication.conclusion)
        .footer=beautify(@communication.footer)

    -elsif @communication.document?
      .pull-right
        =toolbar do
          =tool("Ajouter une pièce", new_piece_url(:communication_id => @communication.id), :icon => "file")  
      -if @communication.alone_pieces.count > 0
        .pieces=render :partial => "pieces/piece", :collection => @communication.alone_pieces
      =link_to(image_tag(@communication.flyer.url(:web)), @communication.target_url, :class => :flyer)
    -elsif @communication.flyer?
      .pull-right
        =toolbar do
          =tool("Ajouter une pièce", new_piece_url(:communication_id => @communication.id), :icon => "file")  
      -if @communication.alone_pieces.count > 0
        .pieces=render :partial => "pieces/piece", :collection => @communication.alone_pieces
      =link_to(image_tag(@communication.flyer.url(:web)), @communication.target_url, :class => :flyer)
  
  -t.tab(:details, "Détails") do
    -fields = [:name, :planned_on, :sender_email, :sender_label, :reply_to_email, :subject, :target_url]
    -if @communication.newsletter
      -#fields += [:title, :introduction, :conclusion]
    -else
      -fields += [:message, :unreadable_label, :unsubscribe_label, :message_label]
    %table.table.table-striped.table-bordered
      -for x in fields
        %tr.field.input
          %th=Communication.human_attribute_name(x)
          %td=beautify(@communication.send(x).to_s)

  -t.tab(:touchables, "labels.x_touchables".t(:count => @communication.touchables.count)) do
    =list :touchables

  -t.tab(:costs, "Coûts") do
    %table.table.table-striped.table-bordered
      %tr
        %th Canal
        %th Coût unitaire
        %th Quantité
        %th Coût
      -count, amount = 0, 0.0
      -for canal in Touchable.canals
        -cnt = @communication.touchables.where(:canal => canal).count
        -uat = @communication.client.costs_hash[canal].to_f
        -ant = cnt * uat
        -count += cnt
        -amount += ant
        %tr
          %td=canal.humanize
          %td.dec=uat.l(:currency => :EUR)
          %td.dec=cnt.l
          %td.dec=ant.l(:currency => :EUR)
      %tr
        %th{:colspan => 2} Total
        %th.dec=count.l
        %th.dec=amount.l(:currency => :EUR)
    =link_to("Mettre à jour les tarifs", edit_user_url(@communication.client))

  -t.tab(:shipments, "Envois", {"data-refresh-with" => communication_url(@communication, :tab => :shipments), "data-refresh-every" => "4000"}) do
    =render :partial => "shipments"
